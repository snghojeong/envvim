envvim
============

This is a simple vim environment to develop C/C++ software.

![screenshot](https://camo.githubusercontent.com/1f3f922431d5363224b20e99467ff28b04e810e2/687474703a2f2f692e696d6775722e636f6d2f304f50346f6f642e676966)

This image is screenshot of [YouCompleteMe](https://github.com/Valloric/YouCompleteMe).

Plugin list
------------

[NERDTree](https://github.com/scrooloose/nerdtree)

[YouCompleteMe](https://github.com/Valloric/YouCompleteMe)

[FuzzyFinder](https://github.com/vim-scripts/FuzzyFinder)

[surround.vim](https://github.com/tpope/vim-surround)

Dependencies
------------

vim (:-))

python

cmake


Installation
------------

Fallow this instructions:

    cd ~
    git clone https://github.com/snghojeong/envvim.git
    cd envvim
    git submodule update --init --recursive
    cd bundle/YouCompleteMe
    python install.py --clang-completer
    cd ~
    mv envvim .vim
    cat "source ~/.vim/vimrc_ext" >> .vimrc

And when you use cmake to build makefile, give -DCMAKE\_EXPORT\_COMPILE\_COMMANDS=ON option to make compile\_commands.json.

Simple guide
------------

- Find file: \ff
- View directory tree: F9
- New tab: F2
- Next tab: F3
- Previous tab: F4
- Surround: See surround.vim guide.
- And so on... surf my vimrc\_ext file!

My favorites 1. Intellisense
------------

My vim plugin environment uses YouCompleteMe for intellisense.
To use this function, you should get "compile\_commands.json" file acquired by CMake.
By adding "-DCMAKE\_EXPORT\_COMPILE\_COMMAND=ON", you can achive it! and enjoy intellisense presented by YouCompleteMe.
Notice! You should place your "compile\_commands.json" file generated by CMake to home directory where you start vim.

My favorites 2. Visual Mode
------------

Have you ever use mause drag on your word process?
Perhaps, you use mause drag to block some of text contents to copy, cut or modify the text.
In Vim, you can block your contents like GUI based word process do!
Simply, just press 'v' and now you vim turn into visual mode.
I favorite Shift+'v' to block lines. This is very powerful!
After you block your text, you can modify your contents by followings:
  U: turn into upper case.
  u: turn into lower case.
  x: cut the contents.

My favorites 3. FuzzyFinder (Find file...)
------------

Almost of IDE support "Find file" function that open source file that you need.
My vim environment also provides the find tool using interesting plugin named "FuzzyFinder".
If you want to find some file, just press '\ff' and you can show the list of files.
Type the file name that you need and then plugin will shows candidates.
The most fascinating feature is that the plugin utilize fuzzy algorithm to search file name.
By doing so, you can pick the file even if you have some mistake to type file name.

My favorites 4. Surround
------------

All the time I code some software, I must use some kind of surrounding syntax. ex) "", '', (), {} and so on.
If I already type contents and I need to surround them, in vim it is quite annoying job. Type " and move to end, and type" again...
In this case, I just use Surround plugin! You just block the content that you want to surround, 
and then type 'S+"', after typing you can show that your content already surrounded by ".

License
-------

Copyright (c) snghojeong.  Distributed under the same terms as Vim itself.
See `:help license`.
